{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phuon\\\\Desktop\\\\react-essentials\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect, useReducer } from 'react'; //My Github api users info: https://api.github.com/users/minhphuong1994\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst myArr = [\"first statement\", \"second timestamp\", \"third soco\"];\nconst myArrObj = myArr.map((item, index) => ({\n  \"id\": index,\n  \"item\": item\n})); // Using props parameter\n\nconst Header = props => {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [props.name, \"'s Learning React Project\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}; // Using Destructuring Objcts (myArrTest) instead of original props\n\n\n_c = Header;\n\nconst Body = ({\n  myArrTest\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"This is Body\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://picsum.photos/200/300\",\n      height: \"\",\n      alt: \"it's here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        textAlign: \"left\"\n      },\n      children: myArrTest.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: data.item\n      }, data.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}; // using Array Destructuring. [variables] = [values] e.g [,,abc] = [true,\"hi\",30] will give abc value of 30\n\n\n_c2 = Body;\n\nconst Footer = props => {\n  _s();\n\n  //setup a State first element will be value, second will be function to change the Sate value\n  const [value, setValue] = useState(\"Destructuring Array!\");\n  const [value2, setValue2] = useState(\"Second Sate\"); //setup listening to State changes. First element will be aa value, second will be dependencies to listen on\n\n  useEffect(() => {\n    console.log(`it has changed ${value}`);\n  }, [value]);\n  useEffect(() => {\n    console.log(value2);\n  }, [value2]); //useReducer is like a helper function, first argument is a function to perform, second argument is a default value\n\n  const [value3, setValue3] = useReducer(value3 => !value3, false);\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"This is Footer. \", value, \" and \", value2]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setValue(\"I have changed value!\"),\n      children: \"Change it!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setValue2(\"I have changed value2!!\"),\n      children: \"Change it!!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: value3,\n      onChange: setValue3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: value3 ? \"not checked!\" : \"checked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Footer, \"gEc1d/Kk+PPQli+5pkrJjjynnkg=\");\n\n_c3 = Footer;\n\nconst Footer_2 = ({\n  username\n}) => {\n  _s2();\n\n  const [value, setValue] = useState(null); //creating an empty state\n  //use useEffect to siliently fetching data when rendering, given empty arr because not listening to any state\n\n  useEffect(() => {\n    fetch(`https://api.github.com/users/${username}`).then(res => {\n      res.json().then(jsonData => setValue(jsonData)).catch(err => console.log(err));\n    }).catch(err => console.log(err));\n  }, []);\n\n  if (value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n};\n\n_s2(Footer_2, \"AjE4hkQCYp+hYF/j4EIaYJOGCl8=\");\n\n_c4 = Footer_2;\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: \"Phuong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {\n      myArrTest: myArrObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer_2, {\n      username: \"minhphuong1994\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Body\");\n$RefreshReg$(_c3, \"Footer\");\n$RefreshReg$(_c4, \"Footer_2\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["C:/Users/phuon/Desktop/react-essentials/src/App.js"],"names":["React","useState","useEffect","useReducer","myArr","myArrObj","map","item","index","Header","props","name","Body","myArrTest","textAlign","data","id","Footer","value","setValue","value2","setValue2","console","log","value3","setValue3","Footer_2","username","fetch","then","res","json","jsonData","catch","err","App"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, {useState, useEffect, useReducer} from 'react';\n\n//My Github api users info: https://api.github.com/users/minhphuong1994\n\nconst myArr = [\n  \"first statement\",\n  \"second timestamp\",\n  \"third soco\"\n]\n\nconst myArrObj = myArr.map((item,index)=>({\"id\":index,\"item\":item}))\n\n// Using props parameter\nconst Header =(props)=>{  \n  return(\n    <header>\n      <h1>{props.name}'s Learning React Project</h1>\n    </header>\n  )\n}\n\n// Using Destructuring Objcts (myArrTest) instead of original props\nconst Body =({myArrTest})=>{\n  return(\n    <section>\n      <h2>This is Body</h2>\n      <img src=\"https://picsum.photos/200/300\" height=\"\" alt=\"it's here\"></img>\n      <ul style={{textAlign:\"left\"}}>\n        {myArrTest.map((data)=> <li key={data.id}>{data.item}</li>)}\n      </ul>      \n    </section>\n  )\n}\n\n// using Array Destructuring. [variables] = [values] e.g [,,abc] = [true,\"hi\",30] will give abc value of 30\nconst Footer =(props)=>{\n  //setup a State first element will be value, second will be function to change the Sate value\n  const [value,setValue] = useState(\"Destructuring Array!\")\n  const [value2, setValue2] = useState(\"Second Sate\")\n  //setup listening to State changes. First element will be aa value, second will be dependencies to listen on\n  useEffect(()=>{\n    console.log(`it has changed ${value}`)\n  },[value])\n\n  useEffect(()=>{\n    console.log(value2)\n  },[value2] )\n\n  //useReducer is like a helper function, first argument is a function to perform, second argument is a default value\n  const [value3,setValue3] = useReducer(\n    (value3) => !value3\n    ,false)\n\n  return(\n    <footer>\n      <h3>This is Footer. {value} and {value2}</h3>\n      <button onClick= {()=>setValue(\"I have changed value!\")}>Change it!</button>\n      <button onClick= {()=>setValue2(\"I have changed value2!!\")}>Change it!!</button>\n      <br/>\n      <input type=\"checkbox\" value={value3} onChange={setValue3}></input>\n      <br/>\n      <p>{ value3 ? \"not checked!\": \"checked\"}</p>\n    </footer>\n  )\n}\n\n\n\nconst Footer_2 = ({username})=>{\n  const [value,setValue] = useState(null) //creating an empty state\n\n  //use useEffect to siliently fetching data when rendering, given empty arr because not listening to any state\n  useEffect(()=>{\n    fetch(`https://api.github.com/users/${username}`).then(\n      (res)=>{\n        res.json().then((jsonData)=> setValue(jsonData)).catch((err)=>console.log(err))\n      }\n    ).catch((err)=>console.log(err))\n  },[])\n\n  if(value){\n    return <div>{value}</div>\n  }\n  else{\n    return <div></div>\n  }\n\n}\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header name=\"Phuong\"/>\n      <Body myArrTest={myArrObj}/>\n      <Footer/>\n      <Footer_2 username=\"minhphuong1994\"/>\n    </div> \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}